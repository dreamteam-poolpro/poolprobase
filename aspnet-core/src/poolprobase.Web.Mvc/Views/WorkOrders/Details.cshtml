
@using poolprobase.Web.Startup

@model poolprobase.Web.Models.Customer.WorkOrder

@{
    ViewBag.CurrentPageName = PageNames.WorkOrderDetails;
    ViewData["Title"] = "Work Order - Details";
}
@section scripts{ 
<environment names="Development">
    <script src="~/view-resources/Views/WorkOrders/details.js" asp-append-version="true"></script>
</environment>
<environment names="Staging,Production">
    <script src="~/view-resources/Views/WorkOrders/details.js" asp-append-version="true"></script>
</environment>
}
<!-- creates a 'card' section -->
<div class="row clearfix">
    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
        <div class="card">
            <!-- makes a pretty header-->
            <div class="header">
                <h2>
                    Work Order Number: #@Model.WorkOrderID
                </h2>

                <!-- a mini 3 dot type of menu for the refresh function-->
                <ul class="header-dropdown m-r--5">
                    <li class="dropdown">
                        <a href="javascript:void(0);" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                            <i class="material-icons">more_vert</i>
                        </a>
                        <ul class="dropdown-menu pull-right">
                            <li><a id="RefreshButton" href="javascript:void(0);" class="waves-effect waves-block"><i class="material-icons">refresh</i>Refresh</a></li>
                        </ul>
                    </li>
                </ul>

            </div>
            <!-- a table to display the work orders details-->
            <div class="body table-responsive">
                <table class="table">
                    <!-- table headers-->
                    <tr>
                        <th>Customer Id</th>
                        <th>Name</th>
                        <th>Address</th>
                        <th>Service Tech Id</th>
                        <th>Name</th>
                    </tr>
                    <!-- values -->
                    <tr>
                        <td>
                            @Html.DisplayFor(model => model.WO_Customer.CustomerID)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.WO_Customer.FirstName)
                            @Html.DisplayFor(model => model.WO_Customer.LastName)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.WO_Customer.Address)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.WO_ServiceTech.ServiceTechID)
                        </td>
                        <td>
                            @Html.DisplayFor(model => model.WO_ServiceTech.FirstName)
                            @Html.DisplayFor(model => model.WO_ServiceTech.LastName)
                        </td>
                    </tr>
                </table>

                <!-- to display associated line items-->
                <table class="table">
                    <tr>
                        <th>
                            Line Item ID
                        </th>
                        <th>
                            Description
                        </th>
                        <th>
                            Quantity
                        </th>
                        <th>
                            Units
                        </th>
                        <th>
                            Unit Cost
                        </th>
                        <th>
                            Total Cost
                        </th>
                    </tr>
                    @foreach (var item in Model.WO_LineItems)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.LineItemID)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Description)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Quantity)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Units)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.UnitCost)
                            </td>
                            <td>
                                line item cost goes here
                            </td>
                        </tr>
                    }
                </table>

                <button type="button" data-toggle="modal" data-target="#AddLineItemModal" data-role-id="@Model.WorkOrderID" class="btn btn-primary btn-circle waves-effect waves-circle waves-float pull-right add-lineitem" >
                    <i class="material-icons">add</i>
                </button>

            </div>
        </div>
    </div>
 </div>
<!-- makes it pop up a modal-->
<div class="modal fade" id="AddLineItemModal" tabindex="-1" role="dialog" aria-labelledby="AddLineItemModalLabel" data-backdrop="static">
    <div class="modal-dialog" role="document">
        <!-- class type tells is to load the partial view as a modal -->
        <div class="modal-content">
            <!-- the partial view _awoifjqwero loads here-->
        </div>
    </div>
</div>